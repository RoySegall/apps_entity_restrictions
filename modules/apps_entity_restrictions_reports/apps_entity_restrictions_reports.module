<?php

/**
 * @file
 * Main module file.
 */

/**
 * Implements hook_entity_info_alter().
 */
function apps_entity_restrictions_reports_entity_info_alter(&$entity_info) {
  $entity_info['entity_view_count']['bundle admin ui'] = array(
    'path' => 'admin/structure/entity_view_count',
    'permission' => 'manage entity view count fields',
  );
}

/**
 * Implements hook_permission().
 */
function apps_entity_restrictions_reports_permission() {
  return array(
    'manage entity view count fields' => array(
      'title' => t('Manage entity view count fields'),
      'description' => t('Grant this permission to users which can manage entity view count fields.'),
    ),
  );
}

/**
 * Implements hook_entity_bundle_ENTITY_TYPE_bundle_info().
 */
function apps_entity_restrictions_reports_entity_bundle_entity_view_count_bundle_info() {
  return array(
    'apps_usage' => array(
      'label' => t('Apps usage'),
      'description' => t('Track usages for apps requests.'),
    ),
  );
}

/**
 * Implements hook_apps_entity_restriction_app_event_listener().
 */
function apps_entity_restrictions_reports_apps_entity_restriction_app_event_listener(AppsEntityRestriction $app, $info) {
  $evc = entity_view_count_create(array());
  $evc->entity_id = $app->getId();
  $evc->entity_type = 'apps_entity_restrictions';
  $evc->type = 'apps_usage';

  $wrapper = entity_metadata_wrapper('entity_view_count', $evc);
  $request_status = in_array($info['reason'], array('property_operation_not_allowed', 'general_operation_not_allowed')) ? 'failed' : 'passed';
  $wrapper->field_request_status->set($request_status);
  $wrapper->save();
}
