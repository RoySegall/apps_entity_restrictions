<?php

/**
 * Contains AppsEntityRestrictionsBase
 */

class AppsEntityRestrictionsBase extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Apps entity restrictions basic',
      'description' => 'Test apps entity restrictions basic logic.',
      'group' => 'Apps entity restrictions',
    );
  }

  /**
   * @var AppsEntityRestriction
   */
  protected $app;

  /**
   * {@inheritdoc}
   */
  public function setUp() {
    parent::setUp(array('apps_entity_restrictions'));

    $this->app = apps_entity_restrictions_create();
    $this->app
      ->setTitle('Demo application')
      ->allow('node', 'methods', 'get')
      ->allow('node', 'properties', 'nid')
      ->allow('node', 'properties', 'body')
      ->save();
  }

  /**
   * Check basic access restrictions for entity.
   */
  public function testBasicRestrictions() {
    try {
      $this->app->entityAccess('POST', 'user');
    } catch (\AppsEntityRestrictionsException $e) {
      $this->pass('Apps entity restriction throw exception for non handled entity.');
    }

    // Check entity access.
    $this->assertTrue($this->app->entityAccess('get', 'node'), 'The app have access to node entity.');
    $this->assertFalse($this->app->entityAccess('post', 'node'), 'The app does not have access to node entity.');

    // Check properties access.
    $this->assertTrue($this->app->entityPropertyAccess('get', 'node', 'nid'), 'The app have GET access to the node ID entity.');
    $this->assertTrue($this->app->entityPropertyAccess('get', 'node', 'body'), 'The app have GET access to the node body entity.');
    $this->assertFalse($this->app->entityPropertyAccess('get', 'node', 'field_date'), 'The app does not have GET access to the node date field.');
    $this->assertFalse($this->app->entityPropertyAccess('post', 'node', 'field_date'), 'The app does not have POST access to the node date field.');
  }

}
